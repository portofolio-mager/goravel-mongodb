// Code generated by mockery. DO NOT EDIT.

package contracts

import (
	config "github.com/goravel/framework/contracts/config"
	contracts "github.com/tonidy/goravel-mongodb/contracts"

	mock "github.com/stretchr/testify/mock"
)

// ConfigBuilder is an autogenerated mock type for the ConfigBuilder type
type ConfigBuilder struct {
	mock.Mock
}

type ConfigBuilder_Expecter struct {
	mock *mock.Mock
}

func (_m *ConfigBuilder) EXPECT() *ConfigBuilder_Expecter {
	return &ConfigBuilder_Expecter{mock: &_m.Mock}
}

// Config provides a mock function with no fields
func (_m *ConfigBuilder) Config() config.Config {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Config")
	}

	var r0 config.Config
	if rf, ok := ret.Get(0).(func() config.Config); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(config.Config)
		}
	}

	return r0
}

// ConfigBuilder_Config_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Config'
type ConfigBuilder_Config_Call struct {
	*mock.Call
}

// Config is a helper method to define mock.On call
func (_e *ConfigBuilder_Expecter) Config() *ConfigBuilder_Config_Call {
	return &ConfigBuilder_Config_Call{Call: _e.mock.On("Config")}
}

func (_c *ConfigBuilder_Config_Call) Run(run func()) *ConfigBuilder_Config_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigBuilder_Config_Call) Return(_a0 config.Config) *ConfigBuilder_Config_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigBuilder_Config_Call) RunAndReturn(run func() config.Config) *ConfigBuilder_Config_Call {
	_c.Call.Return(run)
	return _c
}

// Connection provides a mock function with no fields
func (_m *ConfigBuilder) Connection() string {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Connection")
	}

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// ConfigBuilder_Connection_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Connection'
type ConfigBuilder_Connection_Call struct {
	*mock.Call
}

// Connection is a helper method to define mock.On call
func (_e *ConfigBuilder_Expecter) Connection() *ConfigBuilder_Connection_Call {
	return &ConfigBuilder_Connection_Call{Call: _e.mock.On("Connection")}
}

func (_c *ConfigBuilder_Connection_Call) Run(run func()) *ConfigBuilder_Connection_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigBuilder_Connection_Call) Return(_a0 string) *ConfigBuilder_Connection_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigBuilder_Connection_Call) RunAndReturn(run func() string) *ConfigBuilder_Connection_Call {
	_c.Call.Return(run)
	return _c
}

// Writers provides a mock function with no fields
func (_m *ConfigBuilder) Writers() []contracts.FullConfig {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Writers")
	}

	var r0 []contracts.FullConfig
	if rf, ok := ret.Get(0).(func() []contracts.FullConfig); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]contracts.FullConfig)
		}
	}

	return r0
}

// ConfigBuilder_Writers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Writers'
type ConfigBuilder_Writers_Call struct {
	*mock.Call
}

// Writers is a helper method to define mock.On call
func (_e *ConfigBuilder_Expecter) Writers() *ConfigBuilder_Writers_Call {
	return &ConfigBuilder_Writers_Call{Call: _e.mock.On("Writers")}
}

func (_c *ConfigBuilder_Writers_Call) Run(run func()) *ConfigBuilder_Writers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *ConfigBuilder_Writers_Call) Return(_a0 []contracts.FullConfig) *ConfigBuilder_Writers_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *ConfigBuilder_Writers_Call) RunAndReturn(run func() []contracts.FullConfig) *ConfigBuilder_Writers_Call {
	_c.Call.Return(run)
	return _c
}

// NewConfigBuilder creates a new instance of ConfigBuilder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewConfigBuilder(t interface {
	mock.TestingT
	Cleanup(func())
}) *ConfigBuilder {
	mock := &ConfigBuilder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
